AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template VPC. Creates a VPC with four public and four private subnets in two different Availability Zones.'

Parameters:
  VPCName:
    Description: The name of the VPC
    Type: String
    Default: Development-VPC
  CidrBlock:
    Description: The CIDR block for the VPC
    Type: String
  PublicSubnetACidrBlock:
    Description: "The CIDR block for the Public Subnet A"
    Type: String
  PublicSubnetBCidrBlock:
    Description: "The CIDR block for the Public Subnet B"
    Type: String
  PrivateSubnetACidrBlock:
    Description: "The CIDR block for the Private Subnet A"
    Type: String
  PrivateSubnetBCidrBlock:
    Description: "The CIDR block for the Private Subnet B"
    Type: String
  PrivateSubnetCCidrBlock:
    Description: "The CIDR block for the Private Subnet C"
    Type: String
  PrivateSubnetDCidrBlock:
    Description: "The CIDR block for the Private Subnet D"
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: "Name"
          Value: !Ref VPCName
        - Key: "Owner"
          Value: "Kayan"

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetACidrBlock
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: Public-Subnet-A

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetBCidrBlock
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: Public-Subnet-B

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetACidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private-Subnet-A

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetBCidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private-Subnet-B

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetCCidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private-Subnet-C

  PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetDCidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private-Subnet-D

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub StackName-IGW

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public-Subnet-RT

  RouteTableAssociationPublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet1

  RouteTableAssociationPublic2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet2

  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private-Subnet-RT

  RouteTableAssociationPrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref PrivateSubnet1

  RouteTableAssociationPrivate2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref PrivateSubnet2

  RouteTableAssociationPrivate3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref PrivateSubnet3

  RouteTableAssociationPrivate4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref PrivateSubnet4

  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public-NetworkAcl

  SubnetNetworkAclAssociationPublic1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      NetworkAclId: !Ref PublicNetworkAcl

  SubnetNetworkAclAssociationPublic2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      NetworkAclId: !Ref PublicNetworkAcl

  PrivateANetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private-NetworkAcl-A

  SubnetNetworkAclAssociationPrivate1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      NetworkAclId: !Ref PrivateANetworkAcl

  SubnetNetworkAclAssociationPrivate2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      NetworkAclId: !Ref PrivateANetworkAcl

  PrivateBNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private-NetworkAcl-B

  SubnetNetworkAclAssociationPrivate3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      NetworkAclId: !Ref PrivateBNetworkAcl

  SubnetNetworkAclAssociationPrivate4:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet4
      NetworkAclId: !Ref PrivateBNetworkAcl

  PublicInboudRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      RuleAction: allow
      Protocol: -1
      CidrBlock: 0.0.0.0/0

  PublicOutboudRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      RuleAction: allow
      Protocol: -1
      CidrBlock: 0.0.0.0/0
      Egress: true

  PrivateAInboudRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateANetworkAcl
      RuleNumber: 100
      RuleAction: allow
      Protocol: -1
      CidrBlock: !Ref CidrBlock

  PrivateAOutboudRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateANetworkAcl
      RuleNumber: 100
      RuleAction: allow
      Protocol: -1
      CidrBlock: !Ref CidrBlock
      Egress: true

  PrivateBInboudRuleA:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateBNetworkAcl
      RuleNumber: 100
      RuleAction: allow
      Protocol: 6
      CidrBlock: !Ref PrivateSubnetACidrBlock
      PortRange:
        From: 22
        To: 22

  PrivateBOutboudRuleA:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateBNetworkAcl
      RuleNumber: 100
      RuleAction: allow
      Protocol: 6
      CidrBlock: !Ref PrivateSubnetACidrBlock
      Egress: true
      PortRange:
        From: 22
        To: 22

  PrivateBInboudRuleA1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateBNetworkAcl
      RuleNumber: 200
      RuleAction: allow
      Protocol: 6
      CidrBlock: !Ref PrivateSubnetBCidrBlock
      PortRange:
        From: 22
        To: 22

  PrivateBOutboudRuleA1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateBNetworkAcl
      RuleNumber: 200
      RuleAction: allow
      Protocol: 6
      CidrBlock: !Ref PrivateSubnetBCidrBlock
      Egress: true
      PortRange:
        From: 22
        To: 22

  PrivateBInboudRuleB:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateBNetworkAcl
      RuleNumber: 300
      RuleAction: allow
      Protocol: 6
      CidrBlock: !Ref PrivateSubnetACidrBlock
      PortRange:
        From: 27017
        To: 27017

  PrivateBOutboudRuleB:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateBNetworkAcl
      RuleNumber: 300
      RuleAction: allow
      Protocol: 6
      CidrBlock: !Ref PrivateSubnetACidrBlock
      Egress: true
      PortRange:
        From: 27017
        To: 27017

  PrivateBInboudRuleB1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateBNetworkAcl
      RuleNumber: 400
      RuleAction: allow
      Protocol: 6
      CidrBlock: !Ref PrivateSubnetBCidrBlock
      PortRange:
        From: 27017
        To: 27017

  PrivateBOutboudRuleB1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateBNetworkAcl
      RuleNumber: 400
      RuleAction: allow
      Protocol: 6
      CidrBlock: !Ref PrivateSubnetBCidrBlock
      Egress: true
      PortRange:
        From: 27017
        To: 27017


  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH and HTTP/HTTPS traffic"
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Core-SG

  SecurityGroupIngressSSH:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0

  SecurityGroupIngressHTTP:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0

  SecurityGroupIngressHTTPS:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '443'
      ToPort: '443'
      CidrIp: 0.0.0.0/0

Outputs:
  VpcId:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Ref VPCName
  VpcCIDR:
    Description: The CIDR block of the VPC
    Value: !Ref CidrBlock
  PublicSubnet1:
    Description: The ID of the first public subnet
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Description: The ID of the second public subnet
    Value: !Ref PublicSubnet2
  PrivateSubnet1:
    Description: The ID of the first private subnet
    Value: !Ref PrivateSubnet1
  PrivateSubnet2:
    Description: The ID of the second private subnet
    Value: !Ref PrivateSubnet2
  PrivateSubnet3:
    Description: The ID of the third private subnet
    Value: !Ref PrivateSubnet3
  PrivateSubnet4:
    Description: The ID of the fourth private subnet
    Value: !Ref PrivateSubnet4
  InternetGatewayId:
    Description: The ID of the Internet Gateway
    Value: !Ref InternetGateway
  SecurityGroupId:
    Description: The ID of the security group
    Value: !Ref SecurityGroup
